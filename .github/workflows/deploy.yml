name: Update, check and deploy site

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create the data files
        run: .scripts/update.sh

      - name: Update repository
        uses: EndBug/add-and-commit@v9.1.4
        with:
          add: _data/ assets/json/
          message: Update data files
          push: true

      - name: Install linters
        run: |
          sudo apt-get update
          sudo apt-get install -y npm
          npm install eslint --save-dev
          npm install stylelint --save-dev
          npm install stylelint-config-standard --save-dev
          npm install htmlhint --save-dev
          npm install markdownlint-cli --save-dev

      - name: Check source
        run: .scripts/check.sh

      - name: Setup Ruby
        uses: ruby/setup-ruby@472790540115ce5bd69d399a020189a8c87d641f # v1.247.0
        with:
          ruby-version: '3.0' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Lint js css html
        run: .scripts/check-site.sh
      
      - name: Minify json
        run: .scripts/minify.sh

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
